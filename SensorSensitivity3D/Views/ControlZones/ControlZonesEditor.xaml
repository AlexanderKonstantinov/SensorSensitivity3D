<Window x:Class="SensorSensitivity3D.Views.ControlZones.ControlZonesEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:t="http://schemas.telerik.com/2008/xaml/presentation"       
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:helpers="clr-namespace:SensorSensitivity3D.Helpers" 
        xmlns:viewModels="clr-namespace:SensorSensitivity3D.ViewModels.ControlZones"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SensorSensitivity3D.Views.ControlZones"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        WindowStyle="ToolWindow"
        Loaded="ControlZoneEditor_OnLoaded"
        Height="800" MinWidth="600">

    <Window.DataContext>
        <viewModels:ControlZonesEditorViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <helpers:StringToColorConverter x:Key="StringToColorConverter" />
        <helpers:BoolToVisibilityConverter 
            x:Key="BoolToVisibilityConverter"
            TrueValue="Collapsed"
            FalseValue="Visible"/>
    </Window.Resources>

    <Grid Margin="15">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid
            Margin="10 0"
            Visibility="{Binding IsFull, Mode=OneTime, Converter={StaticResource BoolToVisibilityConverter}}"
            Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock 
                Grid.Row="0"
                Grid.Column="0"
                Text="Цвет пространственных зон" 
                Style="{StaticResource TitleTextBlock}"/>
            <t:RadButton
                Grid.Row="0"
                Grid.Column="1"
                HorizontalAlignment="Right"
                Width="95"
                Height="30"
                ToolTip="Установить общий цвет для всех загружаемых пространственных зон"
                Style="{StaticResource ColorButton}"
                Click="ColorButton_Click"
                Background="{Binding ZonesColor, Mode=OneWay, Converter={StaticResource StringToColorConverter}}" />
            <Popup     
            Grid.Row="0"
            Grid.Column="1"
            x:Name="ColorEditorPopupZonePanel"             
            Style="{StaticResource ColorEditorPopup}" >
                <Grid MouseLeave="ColorEditor_MouseLeave">
                    <t:RadColorEditor                         
                        SelectedColor="{Binding ZonesColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToColorConverter}}"
                        InitialColor="{Binding ZonesColor, Mode=OneTime, Converter={StaticResource StringToColorConverter}}"
                        Style="{StaticResource ColorEditor}" >
                    </t:RadColorEditor>
                </Grid>
            </Popup>
            
        </Grid>

        <WrapPanel 
            Grid.Row="1"
            HorizontalAlignment="Center"
            Orientation="Horizontal" >
            <TextBlock
                Text="{Binding TotalZoneCount, Mode=OneTime, StringFormat=Всего пространственных зон - {0}\,\ }"
                FontSize="20"
                HorizontalAlignment="Center"
                Style="{StaticResource TitleTextBlock}"/>

            <TextBlock
                Text="{Binding SelectedZoneCount, StringFormat=выбрано - {0}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"         
                FontSize="20"
                HorizontalAlignment="Center"
                Style="{StaticResource TitleTextBlock}"/>
        </WrapPanel>

        <Border 
            Grid.Row="2" 
            BorderBrush="Gray" 

            BorderThickness="0 1 0 0" />

        <t:RadListBox 
            x:Name="ZoneList"
            VerticalAlignment="Top"
            ItemsSource="{Binding Zones, Mode=OneTime}"
            SelectionMode="Multiple"
            Background="Transparent"
            FontSize="14"
            BorderThickness="0"
            BorderBrush="#66b366"
            Padding="5"
            SelectionChanged="ZoneList_OnSelectionChanged"
            Grid.Row="3"
            Style="{StaticResource ResourceKey=ScrolledListBox}">

            <t:RadListBox.ItemTemplate>
                <DataTemplate>
                    <WrapPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Label Content="{Binding ControlZoneModel.Name}" Width="300" />
                        <Label Content="{Binding ControlZoneModel.XMin}" />
                        <Label Content=" &lt; X &lt; "/>
                        <Label Content="{Binding ControlZoneModel.XMax}" />
                        <Label Content=" | "/>
                        <Label Content="{Binding ControlZoneModel.YMin}" />
                        <Label Content=" &lt; Y &lt; "/>
                        <Label Content="{Binding ControlZoneModel.YMax}" />
                        <Label Content=" | "/>
                        <Label Content="{Binding ControlZoneModel.ZMin}" />
                        <Label Content=" &lt; Z &lt; "/>
                        <Label Content="{Binding ControlZoneModel.ZMax}" />
                    </WrapPanel>
                </DataTemplate>
            </t:RadListBox.ItemTemplate>

            <t:RadListBox.ItemContainerStyle>
                <Style TargetType="{x:Type t:RadListBoxItem}">

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="Background" Value="#5066B366" />
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                    </Style.Resources>

                    <Setter Property="Margin" Value="0 5" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type t:RadListBoxItem}">
                                <Border 
                                    CornerRadius="10"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    Background="{TemplateBinding Background}" >
                                    <ContentPresenter Margin="5"/>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction 
                                                    Command="{Binding DataContext.SelectZoneCommand, RelativeSource={RelativeSource AncestorType=t:RadListBox}}"
                                                    CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </t:RadListBox.ItemContainerStyle>
        </t:RadListBox>

        <Border 
            Grid.Row="4" 
            BorderBrush="Gray" 
            Margin="0 10"
            BorderThickness="0 1 0 0" />

        <Grid 
            Grid.Row="5"
            Margin="0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <t:RadToggleButton 
                x:Name="SelectAllButton"
                Grid.Column="0"
                Height="30"
                Width="100"
                Margin="0 15 0 0"
                CornerRadius="4"
                Style="{StaticResource BaseRadToggleButton}"
                HorizontalAlignment="Left"
                Click="SelectAllButton_OnClick"
                Command="{Binding SelectAllZonesCommand}"
                CommandParameter="{Binding ElementName=SelectAllButton, Path=IsChecked}">
            </t:RadToggleButton>

            <t:RadButton 
                Grid.Column="1"
                Content="Отмена"
                HorizontalAlignment="Right"
                Style="{StaticResource AcceptDeclineButton}" 
                Click="RadButton_Click"/>

            <t:RadButton 
                Grid.Column="2"
                x:Name="AddButton"
                Content="Подтвердить"
                HorizontalAlignment="Right"
                Background="#66b366"
                Command="{Binding AddZonesCommand}"
                Style="{StaticResource AcceptDeclineButton}"/>

        </Grid>
    </Grid>
</Window>
